<!doctype html>
<html>
  <head>
    <title>NFLSNAPZ</title>
    <style>
      td {
        min-width: 70px;
      }
    </style>
  </head>
  <body>
    <div id="browser"></div>
    <div id="container"></div>

    <script id="browser-template" type="text/ractive">
      <table>
          <tr>
          {{#each games}}
              <td>
                  {{eid}} : {{hnn}} {{vnn}}
              </td>
          {{/each}}
          </tr>
      </table>
    </script>

    <script id="game-template" type="text/ractive">
        <table>
          <tr class="home">
            {{#each home.score}}
            <td class="q{{@index}}">{{this}}</td>
            {{/each}}
          </tr>
          <tr class="away">
            {{#each away.score}}
            <td class="q{{@index}}">{{this}}</td>
            {{/each}}
          </tr>
        </table>

        {{#each drives}}
        <h2>{{posteam}} for {{ydsgained}} yards</h2>
        <table>
          <tr>
            <th>Down</th>
            <th>Yards</th>
            <th>Description</th>
          </tr>
          {{#each plays}}
          <tr class="play">
            <td>{{this.down}}</td>
            <td>{{this.ydsnet}}</td>
            <td>{{this.desc}}</td>
          </tr>
          {{/each}}
        </table>
        {{/each}}
    </script>
    <script src='http://cdn.ractivejs.org/latest/ractive.js'></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min.js"></script>
    <script>
      var server = 'ws://{{server}}:{{port}}'
        , ws     = new WebSocket(server)
        , data;

      // Set up browser
      var browser = new Ractive({
          el : 'browser',
          template : $('#browser-template').html(),
          data : data
      });

      ws.onmessage = function(event){

        var str = event.data;

        if (!str){
            return;
        }

        var data = JSON.parse(str);

        if (handlers[data.message]){
            handlers[data.message](data.data);
        }
      };

      var handlers = {

        // Update browser view
        browser : function(data){
            try {
                var arr = data.ss.gms[0].g,
                    games = arr
                      .map(function(d){ return d.$ })
                      .filter(function(d) { return d.q !== 'F' && d.q !== 'P' });

                browser.set('games', games);
            } catch(e){
                console.log(e);
            }
        },

        // Update game view
        game : function(data){
            console.log('game');
            console.log(data);
        },
      };

      function update(data){

          var ractive = new Ractive({
              el : 'game',
              template : $('#game-template').html(),
              data : data
          });
      }

      function parse(data){

        return data;
      }
    </script>
  </body>
</html>
